services:

  postgres:
    restart: always
    build:
      context: ../seta-postgres
      args:
        - HTTP_PROXY=${HTTP_PROXY}
        - HTTPS_PROXY=${HTTPS_PROXY}
    expose:
      - "5432"
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - NO_PROXY=${NO_PROXY}
      - no_proxy=${NO_PROXY}

  opensearch:
    restart: always
    build:
      context: ../seta-opensearch
      args:
        - HTTP_PROXY=${HTTP_PROXY}
        - HTTPS_PROXY=${HTTPS_PROXY}
    environment:
      - bootstrap.memory_lock=true
      - plugins.security.disabled=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536 # maximum number of open files for the OpenSearch user, set to at least 65536 on modern systems
        hard: 65536

  search:
    restart: always
    build:
      context: ../
      args:
        - HTTP_PROXY=${HTTP_PROXY}
        - HTTPS_PROXY=${HTTPS_PROXY}
    expose:
      - "8081"
    mem_limit: "8g"
    environment:
      - NO_PROXY=${NO_PROXY}
      - no_proxy=${NO_PROXY}
      - ES_HOST
      - STAGE

  nginx:
    restart: always
    build:
      context: ../seta-nginx
      args:
        - HTTP_PROXY=${HTTP_PROXY}
        - HTTPS_PROXY=${HTTPS_PROXY}
    environment:
      - NO_PROXY=${NO_PROXY}
      - no_proxy=${NO_PROXY}

  ui:
    restart: always
    build:
      context: ../
      args:
        - HTTP_PROXY=${HTTP_PROXY}
        - HTTPS_PROXY=${HTTPS_PROXY}
    expose:
      - "8080"
    environment:
      - NO_PROXY=${NO_PROXY}
      - no_proxy=${NO_PROXY}
      - ROOT_USERS
      - API_SECRET_KEY
      - DB_HOST
      - DB_PORT
      - DB_NAME
      - DB_USER
      - DB_PASSWORD
      - STAGE

  ui-react:
    restart: always
    build:
      context: ../seta-react
      args:
        - HTTP_PROXY=${HTTP_PROXY}
        - HTTPS_PROXY=${HTTPS_PROXY}
    expose:
      - "3000"
    environment:
      - NO_PROXY=${NO_PROXY}
      - no_proxy=${NO_PROXY}
      - VITE_IDENTITY_PROVIDERS=${SETA_IDENTITY_PROVIDERS}

  doc:
    restart: always
    build:
      context: ../seta-doc
      args:
        - HTTP_PROXY=${HTTP_PROXY}
        - HTTPS_PROXY=${HTTPS_PROXY}
    environment:
      - NO_PROXY=${NO_PROXY}
      - no_proxy=${NO_PROXY}

  data:
    build:
      context: ../
      dockerfile: seta-data/Dockerfile
      args:
        - HTTP_PROXY=${HTTP_PROXY}
        - HTTPS_PROXY=${HTTPS_PROXY}
    environment:
      - NO_PROXY=${NO_PROXY}
      - no_proxy=${NO_PROXY}
      - ES_HOST
      - STAGE

  auth:
    restart: always
    build:
      context: ../
      args:
        - HTTP_PROXY=${HTTP_PROXY}
        - HTTPS_PROXY=${HTTPS_PROXY}
    expose:
      - "8082"
    environment:
      - NO_PROXY=${NO_PROXY}
      - no_proxy=${NO_PROXY}
      - ROOT_USERS
      - API_SECRET_KEY
      - GITHUB_CLIENT_ID
      - GITHUB_CLIENT_SECRET
      - DB_HOST
      - DB_PORT
      - DB_NAME
      - DB_USER
      - DB_PASSWORD
      - STAGE

  admin:
    restart: always
    build:
      context: ../
      dockerfile: seta-admin/Dockerfile
      args:
        - HTTP_PROXY=${HTTP_PROXY}
        - HTTPS_PROXY=${HTTPS_PROXY}
    expose:
      - "8000"
    environment:
      - NO_PROXY=${NO_PROXY}
      - no_proxy=${NO_PROXY}            
      - ES_HOST
      - STAGE

  nlp:
    restart: always
    build:
      context: ../
      dockerfile: seta-nlp/Dockerfile
      args:
        - HTTP_PROXY=${HTTP_PROXY}
        - HTTPS_PROXY=${HTTPS_PROXY}
    expose:
      - "8000"
    environment:
      - NO_PROXY=${NO_PROXY}
      - no_proxy=${NO_PROXY}            
      - ES_HOST
      - STAGE