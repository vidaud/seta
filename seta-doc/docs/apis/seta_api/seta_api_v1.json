{
    "swagger": "2.0",
    "basePath": "/seta-api/api/v1",
    "paths": {
        "/compute_embeddings": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/emb_response_model"
                        }
                    }
                },
                "description": "Given a file or a plain text, related embeddings are provided. Embeddings are built using Doc2vec.",
                "operationId": "post_compute_emb",
                "parameters": [
                    {
                        "description": "Plain text from which building embeddings.",
                        "name": "text",
                        "in": "query",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apikey": []
                    }
                ],
                "tags": [
                    "seta-api-embeddings"
                ]
            }
        },
        "/corpus": {
            "post": {
                "responses": {
                    "404": {
                        "description": "Not Found Error"
                    },
                    "401": {
                        "description": "Forbbiden access to the resource"
                    },
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/post_response_model"
                        }
                    }
                },
                "description": "Retrieve documents related to a term from EU corpus.EU corpus contains documents of the European Commission: Eur-Lex, CORDIS, JRC PUBSY, EU Open Data Portal, etc..",
                "operationId": "post_corpus_query",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/corpus_post_params"
                        }
                    }
                ],
                "security": [
                    {
                        "apikey": []
                    }
                ],
                "tags": [
                    "seta-api-corpus"
                ]
            },
            "get": {
                "responses": {
                    "404": {
                        "description": "Not Found Error"
                    },
                    "401": {
                        "description": "Forbbiden access to the resource"
                    },
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/get_response_model"
                        }
                    }
                },
                "description": "Retrieve documents related to a term from EU corpus.EU corpus contains documents of the European Commission: Eur-Lex, CORDIS, JRC PUBSY, EU Open Data Portal, etc..",
                "operationId": "get_corpus_query",
                "parameters": [
                    {
                        "name": "term",
                        "in": "query",
                        "type": "string",
                        "description": "Return documents related to the specified term"
                    },
                    {
                        "name": "n_docs",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of documents to be shown (default 10)."
                    },
                    {
                        "name": "from_doc",
                        "in": "query",
                        "type": "integer",
                        "description": "Defines the number of hits to skip, defaulting to 0."
                    },
                    {
                        "name": "search_type",
                        "in": "query",
                        "type": "string",
                        "description": "Defines the type of search to be used admitted values are \"DOCUMENT_SEARCH\", \"CHUNK_SEARCH\", \"ALL_CHUNKS_SEARCH\", default is \"CHUNK_SEARCH\""
                    },
                    {
                        "name": "source",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "By default contains all the corpus: eurlex,bookshop,cordis,pubsy,opendataportal.It is possible to choose from which corpus retrieve documents."
                    },
                    {
                        "name": "collection",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "eurlex metadata collection"
                    },
                    {
                        "name": "subject",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "name": "reference",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "eurlex metadata reference"
                    },
                    {
                        "name": "in_force",
                        "in": "query",
                        "type": "string",
                        "description": "eurlex metadata in_force"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "sort results field:order"
                    },
                    {
                        "name": "semantic_sort_id",
                        "in": "query",
                        "type": "string",
                        "description": "sort results by semantic distance among documents"
                    },
                    {
                        "name": "semantic_sort_id_list",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "sort results by semantic distance among documents"
                    },
                    {
                        "name": "author",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "description"
                    },
                    {
                        "name": "date_range",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "gte:yyyy-mm-dd,lte:yyyy-mm-dd,gt:yyyy-mm-dd,lt:yyyy-mm-dd"
                    },
                    {
                        "name": "aggs",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "field to be aggregated, allowed fields are: \"source\", \"date_year\", \"source_collection_reference\", \"taxonomy:taxonomyname\", \"taxonomies\""
                    },
                    {
                        "name": "other",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    }
                ],
                "security": [
                    {
                        "apikey": []
                    }
                ],
                "tags": [
                    "seta-api-corpus"
                ]
            },
            "put": {
                "responses": {
                    "401": {
                        "description": "Forbbiden access to the resource"
                    },
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/corpus_put_response"
                        }
                    }
                },
                "description": "Put a document into corpus index.",
                "operationId": "put_corpus_query",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/corpus_put_request"
                        }
                    }
                ],
                "security": [
                    {
                        "apikey": []
                    }
                ],
                "tags": [
                    "seta-api-corpus"
                ]
            }
        },
        "/corpus/chunk/{id}": {
            "delete": {
                "responses": {
                    "404": {
                        "description": "Not Found Error"
                    },
                    "401": {
                        "description": "Forbbiden access to the resource"
                    },
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/corpus_delete_id_response"
                        }
                    }
                },
                "description": "Given the elasticsearch unique _id, the relative document (chunk) is deleted.",
                "operationId": "delete_corpus_chunk",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "Delete the document (chunk) with the specified _id"
                    }
                ],
                "security": [
                    {
                        "apikey": []
                    }
                ],
                "tags": [
                    "seta-api-corpus"
                ]
            },
            "get": {
                "responses": {
                    "404": {
                        "description": "Not Found Error"
                    },
                    "401": {
                        "description": "Forbbiden access to the resource"
                    },
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/corpus_get_id_response"
                        }
                    }
                },
                "description": "Given the elasticsearch unique _id, the relative document (chunk) is provided.",
                "operationId": "get_corpus_chunk",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "Return the document (chunk) with the specified _id"
                    }
                ],
                "security": [
                    {
                        "apikey": []
                    }
                ],
                "tags": [
                    "seta-api-corpus"
                ]
            }
        },
        "/corpus/document/{id}": {
            "delete": {
                "responses": {
                    "404": {
                        "description": "Not Found Error"
                    },
                    "401": {
                        "description": "Forbbiden access to the resource"
                    },
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/corpus_delete_id_response"
                        }
                    }
                },
                "description": "Given a document_id, the relative list of chunks is deleted.",
                "operationId": "delete_corpus_document",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "Delete the list of chunks with the specified document_id"
                    }
                ],
                "security": [
                    {
                        "apikey": []
                    }
                ],
                "tags": [
                    "seta-api-corpus"
                ]
            },
            "get": {
                "responses": {
                    "404": {
                        "description": "Not Found Error"
                    },
                    "401": {
                        "description": "Forbbiden access to the resource"
                    },
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/corpus_get_id_document_response"
                        }
                    }
                },
                "description": "Given a document_id, the relative list of chunks is shown.",
                "operationId": "get_corpus_document",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "Return all the chunks of document with the specified document_id"
                    },
                    {
                        "description": "Number of chunks to be returned. Default 10.",
                        "name": "n_docs",
                        "type": "string",
                        "in": "query"
                    },
                    {
                        "description": "Defines the number of hits to skip, defaulting to 0.",
                        "name": "from_doc",
                        "type": "string",
                        "in": "query"
                    }
                ],
                "security": [
                    {
                        "apikey": []
                    }
                ],
                "tags": [
                    "seta-api-corpus"
                ]
            }
        },
        "/corpus/{id}": {
            "delete": {
                "responses": {
                    "404": {
                        "description": "Not Found Error"
                    },
                    "401": {
                        "description": "Forbbiden access to the resource"
                    },
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/corpus_delete_id_response"
                        }
                    }
                },
                "description": "Given the elasticsearch unique _id, the relative document is deleted.",
                "operationId": "delete_corpus",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "Delete the document with the specified _id"
                    }
                ],
                "security": [
                    {
                        "apikey": []
                    }
                ],
                "tags": [
                    "seta-api-corpus"
                ]
            },
            "get": {
                "responses": {
                    "404": {
                        "description": "Not Found Error"
                    },
                    "401": {
                        "description": "Forbbiden access to the resource"
                    },
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/corpus_get_id_response"
                        }
                    }
                },
                "description": "Given the elasticsearch unique _id, the relative document from EU corpus is shown.EU corpus contains documents of the European Commission: Eur-Lex, CORDIS,JRC PUBSY, EU Open Data Portal, etc..",
                "operationId": "get_corpus",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "Return the document with the specified _id"
                    }
                ],
                "security": [
                    {
                        "apikey": []
                    }
                ],
                "tags": [
                    "seta-api-corpus"
                ]
            }
        },
        "/file_to_text": {
            "parameters": [
                {
                    "description": "File from which text will be extract",
                    "name": "file",
                    "type": "string",
                    "in": "query"
                }
            ],
            "post": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "description": "Given a file, its text is provided. Tika is used to extract text from file.",
                "operationId": "post_file_to_text",
                "parameters": [
                    {
                        "description": "File from which text will be extract",
                        "name": "file",
                        "in": "formData",
                        "type": "file"
                    }
                ],
                "security": [
                    {
                        "apikey": []
                    }
                ],
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "seta-api-file-to-text"
                ]
            }
        },
        "/ontology": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "Not Found Error"
                    }
                },
                "description": "Return a graph that describes the ontology of the specified term. A set of nodes and relative links are provided.For each node depth, id, size and graph size are returned, depth indicates the depth of the node in the graph, id is the identifier of the term for the node, size indicates the number of occurrences of the term in the document corpus and graph size is useful to visualize the graph.For each link source, target and value are returned, source indicates the node (its id) from which the link starts, target is the node (its id) linked to sourceand value is used to visualize the graph.",
                "operationId": "get_ontology",
                "parameters": [
                    {
                        "description": "The term from which build the ontology graph.",
                        "name": "term",
                        "in": "query",
                        "type": "string",
                        "required": true
                    }
                ],
                "security": [
                    {
                        "apikey": []
                    }
                ],
                "tags": [
                    "seta-api-ontology"
                ]
            }
        },
        "/ontology-list": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ontology_list_response_model"
                        }
                    },
                    "404": {
                        "description": "Not Found Error"
                    }
                },
                "description": "Return a list of lists of similar terms that describes the ontology of the specified term. Lists are ranked by the relation strenght to a query term. The first node in each list is direct relation to query term. The following terms in each sublist have relation to the first node in a sublist.The result should be interpretd as follows: the first item in each sublist is first level connection to the query term. The following terms in sublists have second level relation to the main query term and direct connection to the head of sublist.",
                "operationId": "get_ontology_list",
                "parameters": [
                    {
                        "description": "The term from which build the ontology tree.",
                        "name": "term",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "description": "TO BE REMOVED",
                        "name": "terms",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    }
                ],
                "security": [
                    {
                        "apikey": []
                    }
                ],
                "tags": [
                    "seta-api-ontology"
                ]
            }
        },
        "/similar": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/similar_response_model"
                        }
                    },
                    "404": {
                        "description": "Not Found Error"
                    }
                },
                "description": "Given a term, return the 20 most similar terms (semantic similarity). For each term similarity and cardinality (number of occurrences in documents) are reported.When a list of terms is provided the in the returned list similarity values are set to zero",
                "operationId": "get_similar_words",
                "parameters": [
                    {
                        "description": "TO BE REMOVED",
                        "name": "terms",
                        "in": "query",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "description": "A term.",
                        "name": "term",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "description": "Number of similar terms to be extracted (default 20).",
                        "name": "n_term",
                        "in": "query",
                        "type": "integer"
                    }
                ],
                "security": [
                    {
                        "apikey": []
                    }
                ],
                "tags": [
                    "seta-api-similar"
                ]
            }
        },
        "/suggestions": {
            "parameters": [
                {
                    "name": "chars",
                    "in": "query",
                    "type": "string",
                    "required": true,
                    "description": "Initial letters."
                },
                {
                    "name": "n_suggestions",
                    "in": "query",
                    "type": "integer",
                    "description": "Number of terms to be returned (default 6)."
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "description": "Retrieve terms by initial letters. By default it returns 6 terms, with the parameter n_suggestions is possible to set the number of suggestions to be shown.",
                "operationId": "get_suggestions",
                "security": [
                    {
                        "apikey": []
                    }
                ],
                "tags": [
                    "seta-api-suggestions"
                ]
            }
        },
        "/term_enrichment": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/term_enrichment_response_model"
                        }
                    },
                    "404": {
                        "description": "Not Found Error"
                    }
                },
                "description": "Given a list of terms, and the enrichment type a list of term is returned. The list of term is created using api given with enrichment type parameter.",
                "operationId": "get_term_enrichment",
                "parameters": [
                    {
                        "description": "List of terms.",
                        "name": "terms",
                        "in": "query",
                        "type": "array",
                        "required": true,
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv"
                    },
                    {
                        "description": "enrichment type can be \"similar\" or \"ontology\", default \"similar\"",
                        "name": "enrichment_type",
                        "in": "query",
                        "type": "string"
                    }
                ],
                "security": [
                    {
                        "apikey": []
                    }
                ],
                "tags": [
                    "seta-api-term-enrichment"
                ]
            }
        }
    },
    "info": {
        "title": "SeTA API",
        "version": "beta",
        "description": "SeTA<style>.models {display: none !important}</style> - Semantic Text Analysis. \nSeTa applies advanced text analysis techniques to large document collections, helping policy analysts to understand the concepts expressed in thousands of documents and to see in a visual manner the relationships between these concepts and their development over time.A pilot version of this tool has been populated with hundreds of thousands of documents from EUR-Lex, the EU Bookshop and other sources, and used at the JRC in a number of policy-related use cases including impact assessment, the analysis of large data infrastructures, agri-environment measures and natural disasters. The document collection which have been used, the technical approach chosen and key use cases are described here: https://ec.europa.eu/jrc/en/publication/semantic-text-analysis-tool-seta"
    },
    "produces": [
        "application/json"
    ],
    "consumes": [
        "application/json"
    ],
    "securityDefinitions": {
        "apikey": {
            "type": "apiKey",
            "in": "header",
            "name": "Authorization",
            "description": "Type in the *'Value'* input box below: **'Bearer &lt;JWT&gt;'**, where JWT is the token"
        }
    },
    "tags": [
        {
            "name": "seta-api-suggestions",
            "description": "Suggestions"
        },
        {
            "name": "seta-api-corpus",
            "description": "Corpus"
        },
        {
            "name": "seta-api-similar",
            "description": "Similar"
        },
        {
            "name": "seta-api-ontology",
            "description": "Ontology"
        },
        {
            "name": "seta-api-embeddings",
            "description": "Embeddings"
        },
        {
            "name": "seta-api-file-to-text",
            "description": "File to text"
        },
        {
            "name": "seta-api-term-enrichment",
            "description": "Term Enrichment"
        }
    ],
    "definitions": {
        "corpus_delete_id_response": {
            "properties": {
                "deleted_document_id": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "corpus_get_id_response": {
            "properties": {
                "abstract": {
                    "type": "string"
                },
                "author": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "chunk_number": {
                    "type": "integer"
                },
                "chunk_text": {
                    "type": "string"
                },
                "collection": {
                    "type": "string"
                },
                "concordance": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "date": {
                    "type": "string"
                },
                "document_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "id_alias": {
                    "type": "string"
                },
                "in_force": {
                    "type": "string"
                },
                "keywords": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/keywords"
                    }
                },
                "language": {
                    "type": "string"
                },
                "link_origin": {
                    "type": "string"
                },
                "link_alias": {
                    "type": "string"
                },
                "link_related": {
                    "type": "string"
                },
                "link_reference": {
                    "type": "string"
                },
                "mime_type": {
                    "type": "string"
                },
                "other": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/other"
                    }
                },
                "reference": {
                    "type": "string"
                },
                "score": {
                    "type": "number"
                },
                "taxonomy": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/taxonomy_tree"
                    }
                },
                "title": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "sbert_embedding": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                }
            },
            "type": "object"
        },
        "keywords": {
            "properties": {
                "keyword": {
                    "type": "string"
                },
                "score": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "other": {
            "properties": {
                "*": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "taxonomy_tree": {
            "properties": {
                "classifier": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "longLabel": {
                    "type": "string"
                },
                "name_in_path": {
                    "type": "string"
                },
                "validated": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "subcategories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/taxonomy"
                    }
                }
            },
            "type": "object"
        },
        "taxonomy": {
            "properties": {
                "classifier": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "longLabel": {
                    "type": "string"
                },
                "name_in_path": {
                    "type": "string"
                },
                "validated": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "subcategories": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                }
            },
            "type": "object"
        },
        "corpus_get_id_document_response": {
            "properties": {
                "chunk_list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/corpus_get_id_response_model"
                    }
                },
                "num_chunks": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "corpus_get_id_response_model": {
            "properties": {
                "abstract": {
                    "type": "string"
                },
                "author": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "chunk_number": {
                    "type": "integer"
                },
                "chunk_text": {
                    "type": "string"
                },
                "collection": {
                    "type": "string"
                },
                "concordance": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "date": {
                    "type": "string"
                },
                "document_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "id_alias": {
                    "type": "string"
                },
                "in_force": {
                    "type": "string"
                },
                "keywords": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/keywords"
                    }
                },
                "language": {
                    "type": "string"
                },
                "link_origin": {
                    "type": "string"
                },
                "link_alias": {
                    "type": "string"
                },
                "link_related": {
                    "type": "string"
                },
                "link_reference": {
                    "type": "string"
                },
                "mime_type": {
                    "type": "string"
                },
                "other": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/other"
                    }
                },
                "reference": {
                    "type": "string"
                },
                "score": {
                    "type": "number"
                },
                "taxonomy": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/taxonomy_tree"
                    }
                },
                "title": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "sbert_embedding": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                }
            },
            "type": "object"
        },
        "corpus_post_params": {
            "properties": {
                "term": {
                    "type": "string",
                    "description": "term to be searched",
                    "example": "data"
                },
                "n_docs": {
                    "type": "integer",
                    "description": "Number of documents to be shown (default 10)",
                    "example": 10
                },
                "from_doc": {
                    "type": "integer",
                    "description": "Defines the number of hits to skip, defaulting to 0.",
                    "example": 0
                },
                "search_type": {
                    "type": "string",
                    "description": "search type to be used, possible values are DOCUMENT_SEARCH, CHUNK_SEARCH, ALL_CHUNKS_SEARCH, default is CHUNK_SEARCH"
                },
                "source": {
                    "type": "array",
                    "description": "By default contains all the corpus: eurlex,cordis,pubsy. It is possible to choose from which corpus retrieve documents.",
                    "items": {
                        "type": "string"
                    }
                },
                "reference": {
                    "type": "array",
                    "description": "eurlex metadata reference",
                    "items": {
                        "type": "string"
                    }
                },
                "collection": {
                    "type": "array",
                    "description": "eurlex metadata collection",
                    "items": {
                        "type": "string"
                    }
                },
                "taxonomy_path": {
                    "type": "array",
                    "description": "list of taxonomy path, delimiter ':'",
                    "items": {
                        "type": "string"
                    }
                },
                "in_force": {
                    "type": "string",
                    "description": "eurlex metadata into_force"
                },
                "sort": {
                    "type": "array",
                    "description": "sort results field:order",
                    "items": {
                        "type": "string"
                    }
                },
                "semantic_sort_id": {
                    "type": "string",
                    "description": "sort results by semantic distance among documents"
                },
                "sbert_embedding": {
                    "type": "array",
                    "description": "embeddings vector",
                    "items": {
                        "type": "number"
                    }
                },
                "semantic_sort_id_list": {
                    "type": "array",
                    "description": "sort results by semantic distance among documents",
                    "items": {
                        "type": "string"
                    }
                },
                "sbert_embedding_list": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "description": "list of embeddings vector",
                        "items": {
                            "type": "number"
                        }
                    }
                },
                "author": {
                    "type": "string",
                    "description": "author"
                },
                "date_range": {
                    "type": "array",
                    "description": "examples: gte:yyyy-mm-dd,lte:yyyy-mm-dd,gt:yyyy-mm-dd,lt:yyyy-mm-dd",
                    "items": {
                        "type": "string"
                    }
                },
                "aggs": {
                    "type": "array",
                    "description": "field to be aggregated, allowed fields are:\"source\", \"date_year\", \"source_collection_reference\", \"taxonomy:taxonomyname\", \"taxonomies\"",
                    "items": {
                        "type": "string"
                    }
                },
                "other": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/other"
                    }
                }
            },
            "type": "object"
        },
        "corpus_put_request": {
            "properties": {
                "id": {
                    "type": "string"
                },
                "id_alias": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "abstract": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                },
                "collection": {
                    "type": "string"
                },
                "reference": {
                    "type": "string"
                },
                "author": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "date": {
                    "type": "string",
                    "format": "date"
                },
                "link_origin": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "link_alias": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "link_related": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "link_reference": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "mime_type": {
                    "type": "string"
                },
                "in_force": {
                    "type": "string"
                },
                "language": {
                    "type": "string"
                },
                "taxonomy": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/taxonomy_tree"
                    }
                },
                "keywords": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/keywords"
                    }
                },
                "other": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/other"
                    }
                }
            },
            "type": "object"
        },
        "post_response_model": {
            "properties": {
                "documents": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/document"
                    }
                },
                "aggregations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/aggregation"
                    }
                }
            },
            "type": "object"
        },
        "document": {
            "properties": {
                "_id": {
                    "type": "string"
                },
                "abstract": {
                    "type": "string"
                },
                "author": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "chunk_number": {
                    "type": "integer"
                },
                "chunk_text": {
                    "type": "string"
                },
                "collection": {
                    "type": "string"
                },
                "concordance": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "date": {
                    "type": "string"
                },
                "document_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "id_alias": {
                    "type": "string"
                },
                "in_force": {
                    "type": "string"
                },
                "keywords": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/keywords"
                    }
                },
                "language": {
                    "type": "string"
                },
                "link_origin": {
                    "type": "string"
                },
                "other": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/other"
                    }
                },
                "reference": {
                    "type": "string"
                },
                "score": {
                    "type": "number"
                },
                "taxonomy": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/taxonomy_tree"
                    }
                },
                "title": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "aggregation": {
            "properties": {
                "date_year": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/date_year_agg"
                    }
                },
                "source": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/source_agg"
                    }
                },
                "source_collection_reference": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/source_collection_reference_agg"
                    }
                },
                "taxonomy": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/taxonomy_agg_tree"
                    }
                }
            },
            "type": "object"
        },
        "date_year_agg": {
            "properties": {
                "doc_count": {
                    "type": "integer"
                },
                "year": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "source_agg": {
            "properties": {
                "doc_count": {
                    "type": "integer"
                },
                "key": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "source_collection_reference_agg": {
            "properties": {
                "sources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/source"
                    }
                }
            },
            "type": "object"
        },
        "source": {
            "properties": {
                "doc_count": {
                    "type": "integer"
                },
                "key": {
                    "type": "string"
                },
                "collections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/collection"
                    }
                }
            },
            "type": "object"
        },
        "collection": {
            "properties": {
                "doc_count": {
                    "type": "integer"
                },
                "key": {
                    "type": "string"
                },
                "references": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/reference"
                    }
                }
            },
            "type": "object"
        },
        "reference": {
            "properties": {
                "doc_count": {
                    "type": "integer"
                },
                "key": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "taxonomy_agg_tree": {
            "properties": {
                "doc_count": {
                    "type": "integer"
                },
                "classifier": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "longLabel": {
                    "type": "string"
                },
                "name_in_path": {
                    "type": "string"
                },
                "validated": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "subcategories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/taxonomy_agg"
                    }
                }
            },
            "type": "object"
        },
        "taxonomy_agg": {
            "properties": {
                "doc_count": {
                    "type": "integer"
                },
                "classifier": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "longLabel": {
                    "type": "string"
                },
                "name_in_path": {
                    "type": "string"
                },
                "validated": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "subcategories": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                }
            },
            "type": "object"
        },
        "get_response_model": {
            "properties": {
                "documents": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/document"
                    }
                },
                "aggregations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/aggregation"
                    }
                }
            },
            "type": "object"
        },
        "corpus_put_response": {
            "properties": {
                "document_id": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "similar_response_model": {
            "properties": {
                "words": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/word"
                    }
                }
            },
            "type": "object"
        },
        "word": {
            "properties": {
                "similarity": {
                    "type": "string"
                },
                "similar_word": {
                    "type": "string"
                },
                "cardinality": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "ontology_list_response_model": {
            "properties": {
                "nodes": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "type": "object"
        },
        "emb_response_model": {
            "properties": {
                "embeddings": {
                    "$ref": "#/definitions/to_be_removed"
                },
                "emb_with_chunk_text": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/embeddings"
                    }
                }
            },
            "type": "object"
        },
        "to_be_removed": {
            "properties": {
                "version": {
                    "type": "string"
                },
                "vector": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "vectors": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "number"
                        }
                    }
                }
            },
            "type": "object"
        },
        "embeddings": {
            "properties": {
                "vector": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "chunk": {
                    "type": "integer"
                },
                "version": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "term_enrichment_response_model": {
            "properties": {
                "words": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "type": "object"
        }
    },
    "responses": {
        "ParseError": {
            "description": "When a mask can't be parsed"
        },
        "MaskError": {
            "description": "When any error occurs on mask"
        }
    }
}